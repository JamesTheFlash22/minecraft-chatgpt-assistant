plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
}

configurations {
    shadowCommon
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "shadow"
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // OpenAI API and dependencies
    api 'com.theokanning.openai-gpt3-java:api:0.12.0'
    api 'com.theokanning.openai-gpt3-java:client:0.12.0'
    api 'com.theokanning.openai-gpt3-java:service:0.12.0'
    api 'com.fasterxml.jackson.core:jackson-core:2.13.4'
    api 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'

    include 'com.theokanning.openai-gpt3-java:api:0.12.0'
    include 'com.theokanning.openai-gpt3-java:client:0.12.0'
    include 'com.theokanning.openai-gpt3-java:service:0.12.0'
    include 'com.fasterxml.jackson.core:jackson-core:2.13.4'
    include 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'
    include 'com.squareup.okhttp3:okhttp:4.10.0'
    include 'com.squareup.okio:okio-jvm:3.0.0'
    include 'com.squareup.retrofit2:retrofit:2.9.0'
    include 'com.squareup.retrofit2:converter-jackson:2.9.0'
    include 'com.squareup.retrofit2:adapter-rxjava:2.9.0'
    include 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    include 'io.reactivex.rxjava2:rxjava:2.0.0'
    include 'org.reactivestreams:reactive-streams:1.0.3'
}

architectury {
    common("fabric", "forge")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

repositories {
    mavenCentral()
}

kotlin {
    jvmToolchain(11)
}